-- Alternamos el estado
getgenv().AutoFarming = not getgenv().AutoFarming

-- Variables para controlar y limpiar
local loopThread
local connCharacter

if getgenv().AutoFarming then
    print("⛏️ AutoFarming ACTIVADO")

    local a = game:GetService("ReplicatedStorage")
    local b = game:GetService("Players")
    local c = b.LocalPlayer

    -- Bandera para controlar si "Tribal Overlord" ya ha sido equipada
    local tribalOverlordsEquipped = false

    -- Función para equipar "Swift Samurai"
    local function equipSwiftSamurai()
        local allPets = {}
        for _, folder in pairs(c.petsFolder:GetChildren()) do
            if folder:IsA("Folder") then
                for _, pet in pairs(folder:GetChildren()) do
                    if pet.Name == "Swift Samurai" then
                        table.insert(allPets, pet)
                    end
                end
            end
        end
        -- Equipamos "Swift Samurai"
        for _, pet in pairs(allPets) do
            a.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end

    -- Función para desequipar todas las mascotas
    local function unequipAllPets()
        local f = c:FindFirstChild("petsFolder")
        if not f then return end
        for _, folder in pairs(f:GetChildren()) do
            if folder:IsA("Folder") then
                for _, pet in pairs(folder:GetChildren()) do
                    a.rEvents.equipPetEvent:FireServer("unequipPet", pet)
                end
            end
        end
        task.wait(0.1)
    end

    -- Función para equipar las mascotas necesarias para el renacimiento (Ejemplo "Tribal Overlord")
    local function equipRenascencePets()
        local allPets = {}
        for _, folder in pairs(c.petsFolder:GetChildren()) do
            if folder:IsA("Folder") then
                for _, pet in pairs(folder:GetChildren()) do
                    if pet.Name == "Tribal Overlord" then
                        table.insert(allPets, pet)
                    end
                end
            end
        end

        -- Equipamos las "Tribal Overlord" de la misma manera que "Swift Samurai"
        for _, pet in pairs(allPets) do
            a.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
        tribalOverlordsEquipped = true  -- Marcamos que "Tribal Overlord" ha sido equipada
    end

    -- Función para obtener la cantidad de Golden Rebirth
    local function getGoldenRebirthCount()
        local goldenRebirth = c.ultimatesFolder:FindFirstChild("Golden Rebirth")
        if goldenRebirth then
            return goldenRebirth.Value
        end
        return 0
    end

    -- Obtener fuerza mínima para renacer, ajustada por Golden Rebirth
    local function getStrengthRequiredForRebirth()
        local rebirths = c.leaderstats.Rebirths.Value
        local baseStrength = 10000 + (5000 * rebirths)

        -- Obtener el número de Golden Rebirth
        local goldenRebirthCount = getGoldenRebirthCount()

        -- Si tiene entre 1 y 5 Golden Rebirth, restamos un 10% por cada uno
        if goldenRebirthCount >= 1 and goldenRebirthCount <= 5 then
            baseStrength = baseStrength * (1 - (goldenRebirthCount * 0.1))
        end

        return math.floor(baseStrength)  -- Aseguramos que el valor sea un número entero
    end

    -- Hilo principal de farmeo
    loopThread = task.spawn(function()
        while getgenv().AutoFarming do
            -- Reiniciar la bandera de "Tribal Overlord" para que se pueda equipar nuevamente después de un renacimiento
            tribalOverlordsEquipped = false

            local requiredStrength = getStrengthRequiredForRebirth()
            print("Fuerza necesaria para renacer (ajustada por Golden Rebirth):", requiredStrength)

            -- Equipamos las "Swift Samurai" para comenzar el farmeo
            unequipAllPets()
            equipSwiftSamurai()

            -- Mientras no tengamos la fuerza necesaria, seguimos haciendo repeticiones
            while c.leaderstats.Strength.Value < requiredStrength and getgenv().AutoFarming do
                for _ = 1, 10 do
                    c.muscleEvent:FireServer("rep") -- Incrementar fuerza
                end
                task.wait()
            end

            -- Si la fuerza es suficiente, hacer renacer
            if getgenv().AutoFarming then
                -- Desequipamos "Swift Samurai" y equipamos "Tribal Overlord"
                unequipAllPets()
                equipRenascencePets()

                -- Realizamos la renacida
                repeat
                    a.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    task.wait(0.1)
                until c.leaderstats.Rebirths.Value > 0

                print("Renacimiento realizado, reiniciando ciclo.")
            end

            task.wait()
        end
        print("🛑 AutoFarming DESACTIVADO")
    end)

else
    print("🛑 AutoFarming DESACTIVADO")
    -- Limpiamos el hilo si existía
    if loopThread then
        loopThread:Cancel()
    end
end
